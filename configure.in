dnl Process this file with autoconf to produce a configure script.
AC_INIT(grap.y)
AC_CONFIG_HEADER(grap.h)
AC_LANG_CPLUSPLUS

dnl Checks for programs.
AC_PROG_CXX
AC_PROG_LEX
AC_PROG_YACC
AC_PROG_INSTALL

AC_MSG_CHECKING(that $ac_cv_path_install supports -d)
if $ac_cv_path_install -d /tmp/test$$ && test -d /tmp/test$$; then 
	AC_MSG_RESULT(yes)
else
ac_cv_path_install=$ac_install_sh
	AC_MSG_RESULT(no (changed to $ac_cv_path_install))
fi
rm -rf /tmp/test$$

dnl Checks for libraries.

dnl Checks for header files.
AC_HEADER_STDC
AC_CHECK_HEADERS(unistd.h hash_map)

AC_CACHE_CHECK(that stl.h and string are compatible,grap_cv_lang_stl_and_string,
AC_TRY_COMPILE(
#include <stl.h>
#include <string>
,
list<string> ls;
,grap_cv_lang_stl_and_string="yes",grap_cv_lang_stl_and_string="no"))

if test $grap_cv_lang_stl_and_string = "yes" ; then
AC_DEFINE(USE_STD_STRING)
fi

dnl Checks for typedefs, structures, and compiler characteristics.
AC_TYPE_SIZE_T

dnl Checks for library functions.
AC_CHECK_FUNCS(snprintf random rand)
AC_REPLACE_FUNCS(strdup)

if test $ac_cv_func_random = "no" -a $ac_cv_func_rand = "no";  then
AC_MSG_ERROR(grap requires either random or rand)
fi

if test $ac_cv_func_random = "yes" ; then
	AC_CACHE_CHECK(for declaration of random,grap_cv_decl_random,
		AC_EGREP_CPP(random,
#include <stdlib.h>
#include <math.h>
,grap_cv_decl_random="yes",grap_cv_decl_random="no"))
	if test $grap_cv_decl_random="yes"; then
		AC_DEFINE(RANDOM_DECLARED)
	fi
else
	AC_CACHE_CHECK(for declaration of rand,grap_cv_decl_random,
		AC_EGREP_CPP(rand,
#include <stdlib.h>
#include <math.h>
,grap_cv_decl_rand="yes",grap_cv_decl_rand="no"))
	if test $grap_cv_decl_rand="yes"; then
		AC_DEFINE(RAND_DECLARED)
	fi
fi
AC_OUTPUT(examples/Makefile Makefile)
